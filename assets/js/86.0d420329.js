(window.webpackJsonp=window.webpackJsonp||[]).push([[86],{329:function(t,a,r){"use strict";r.r(a);var e=r(2),s=Object(e.a)({},(function(){var t=this,a=t.$createElement,r=t._self._c||a;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h1",{attrs:{id:"网络知识"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#网络知识"}},[t._v("#")]),t._v(" 网络知识")]),t._v(" "),r("h2",{attrs:{id:"ajax"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#ajax"}},[t._v("#")]),t._v(" "),r("router-link",{attrs:{to:"/web/internet/Ajax.html"}},[t._v("Ajax")])],1),t._v(" "),r("h2",{attrs:{id:"http"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#http"}},[t._v("#")]),t._v(" "),r("router-link",{attrs:{to:"/web/internet/HTTP.html"}},[t._v("HTTP")])],1),t._v(" "),r("h2",{attrs:{id:"tcp"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#tcp"}},[t._v("#")]),t._v(" "),r("router-link",{attrs:{to:"/web/internet/TCP.html"}},[t._v("TCP")])],1),t._v(" "),r("h2",{attrs:{id:"udp"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#udp"}},[t._v("#")]),t._v(" "),r("router-link",{attrs:{to:"/web/internet/UDP.html"}},[t._v("UDP")])],1),t._v(" "),r("h2",{attrs:{id:"跨域"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#跨域"}},[t._v("#")]),t._v(" "),r("router-link",{attrs:{to:"/web/internet/跨域.html"}},[t._v("跨域")])],1),t._v(" "),r("h2",{attrs:{id:"缓存"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#缓存"}},[t._v("#")]),t._v(" "),r("router-link",{attrs:{to:"/web/internet/缓存.html"}},[t._v("缓存")])],1),t._v(" "),r("h2",{attrs:{id:"cookie和session"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#cookie和session"}},[t._v("#")]),t._v(" "),r("router-link",{attrs:{to:"/web/internet/cookie和session.html"}},[t._v("cookie和session")])],1),t._v(" "),r("h2",{attrs:{id:"从输入url到页面加载完成的过程"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#从输入url到页面加载完成的过程"}},[t._v("#")]),t._v(" "),r("router-link",{attrs:{to:"/web/internet/从输入URL到页面加载完成的过程.html"}},[t._v("从输入URL到页面加载完成的过程")])],1),t._v(" "),r("h2",{attrs:{id:"https"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#https"}},[t._v("#")]),t._v(" "),r("router-link",{attrs:{to:"/web/internet/HTTPS.html"}},[t._v("HTTPS")])],1),t._v(" "),r("h3",{attrs:{id:"osi-七层协议"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#osi-七层协议"}},[t._v("#")]),t._v(" OSI 七层协议")]),t._v(" "),r("ul",[r("li",[t._v("应用层\n"),r("ul",[r("li",[t._v("为应用提供通信服务")])])]),t._v(" "),r("li",[t._v("表示层\n"),r("ul",[r("li",[t._v("定义数据格式以及加密")])])]),t._v(" "),r("li",[t._v("会话层\n"),r("ul",[r("li",[t._v("定义了如何开始、控制、结束一个会话，包括对多个双向消息的控制和管理。")])])]),t._v(" "),r("li",[t._v("传输层\n"),r("ul",[r("li",[t._v("选择差错恢复协议还是无差错恢复协议")]),t._v(" "),r("li",[t._v("TCP、UDP")])])]),t._v(" "),r("li",[t._v("网络层\n"),r("ul",[r("li",[t._v("端到端包传输。")]),t._v(" "),r("li",[t._v("路由选择、包分解成更小的包")])])]),t._v(" "),r("li",[t._v("数据链路层\n"),r("ul",[r("li",[t._v("定义单个链路上如何传输数据")])])]),t._v(" "),r("li",[t._v("物理层\n"),r("ul",[r("li",[t._v("传输介质相关")])])])]),t._v(" "),r("h3",{attrs:{id:"tcp-ip四层模型"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#tcp-ip四层模型"}},[t._v("#")]),t._v(" TCP/IP四层模型")]),t._v(" "),r("ul",[r("li",[t._v("数据链路层")]),t._v(" "),r("li",[t._v("网络层")]),t._v(" "),r("li",[t._v("传输层")]),t._v(" "),r("li",[t._v("应用层")])]),t._v(" "),r("h3",{attrs:{id:"dns解析"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#dns解析"}},[t._v("#")]),t._v(" DNS解析")]),t._v(" "),r("p",[t._v("DNS 的作用就是通过域名查询到具体的 IP。")]),t._v(" "),r("ol",[r("li",[t._v("操作系统会首先在本地缓存中查询")]),t._v(" "),r("li",[t._v("没有的话会去系统配置的 DNS 服务器中查询")]),t._v(" "),r("li",[t._v("如果这时候还没得话，会直接去 DNS 根服务器查询，这一步查询会找出负责 com 这个一级域名的服务器")]),t._v(" "),r("li",[t._v("然后去该服务器查询 google 这个二级域名")]),t._v(" "),r("li",[t._v("接下来三级域名的查询其实是我们配置的，你可以给 www 这个域名配置一个 IP，然后还可以给别的三级域名配置一个 IP")])]),t._v(" "),r("p",[t._v("以上介绍的是 DNS 迭代查询，还有种是递归查询，区别就是前者是由客户端去做请求，后者是由系统配置的 DNS 服务器做请求，得到结果后将数据返回给客户端。")]),t._v(" "),r("h3",{attrs:{id:"前后端如何通信"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#前后端如何通信"}},[t._v("#")]),t._v(" 前后端如何通信")]),t._v(" "),r("ul",[r("li",[t._v("Ajax")]),t._v(" "),r("li",[t._v("WebSocket")]),t._v(" "),r("li",[t._v("CORS")])]),t._v(" "),r("h3",{attrs:{id:"websocket"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#websocket"}},[t._v("#")]),t._v(" websocket")]),t._v(" "),r("p",[t._v("在单个 TCP 连接上进行全双工通讯的协议。在 WebSocket API 中，浏览器和服务器只需要完成一次握手，两者之间就直接可以创建"),r("strong",[t._v("持久性")]),t._v("的连接，并进行"),r("strong",[t._v("双向")]),t._v("数据传输。")]),t._v(" "),r("ul",[r("li",[t._v("Socket.onopen\t连接建立时触发")]),t._v(" "),r("li",[t._v("Socket.onmessage\t客户端接收服务端数据时触发")]),t._v(" "),r("li",[t._v("Socket.onerror\t通信发生错误时触发")]),t._v(" "),r("li",[t._v("Socket.onclose\t连接关闭时触发")])])])}),[],!1,null,null,null);a.default=s.exports}}]);